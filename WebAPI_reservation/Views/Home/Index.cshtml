@using WebAPI_reservation.Models
@model IEnumerable<Book>

@{
    ViewBag.Title = "book";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {
    <script>
        //zdefiniowanie modelu (użycie biblioteki Knockout)
        var model = {
            book: ko.observableArray(),
            edit: {
                customername: ko.observable(""),
                room: ko.observable("")
            },
            displayList: ko.observable(true)
        };

        // $.ajax zapewnia dostep do funkcji jQuery Ajax.
        function sendAjaxRequest(httpMethod, callback, url, reqData) {
            $.ajax("/api/web" + (url ? "/" + url : ""), {
                type: httpMethod,
                success: callback,
                data: reqData
            });
        }

        function getAllItems() {
            sendAjaxRequest("GET", function (data) {
                //usunięcie istniejących danych w obesrwowalnej tablicy
                model.book.removeAll();
                //iteracja przez wynik z serwera
                for (var i = 0; i < data.length; i++) {
                    //umieszczenie nowych danych w tablicy
                    model.book.push(data[i]);
                }
            });
        }

        function removeItem(item) {
            sendAjaxRequest("DELETE", function () {
                for (var i = 0; i < model.book().length; i++) {
                    if (model.book()[i].BookId == item.BookId) {
                        model.book.remove(model.book()[i]);
                        break;
                    }
                }
            }, item.BookId);
        }

        function handleCreateClick() {
            model.displayList(false);
        }

        function handleEditClick() {
            sendAjaxRequest("POST", function (newItem) {
                model.book.push(newItem);
                model.displayList(true);
            }, null, {
                CustomerName: model.edit.customername,
                Room: model.edit.room
            });
        }

        //(document).ready - opoznienie wykonanai funkcji, dopoki elementy HTML zostana wczytane
        // getAllItems(); - wczytanie danych z serwera
        //applyBindings - uzycie modelu danych do przetworzenia data-bind
        $(document).ready(function () {
            getAllItems();
            ko.applyBindings(model);
        });
    </script>
}
@section Body {
    <div id="summary" data-bind="if: model.displayList">
        <div class="card-header bg-primary text-white pb-0"><h4>Lista Rezerwacji</h4></div>
        <div class="card-body">
            <table class="table table-striped table-sm">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Wynajmujący</th>
                        <th>Pokój</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: model.book">
                    <tr>
                        <td data-bind="text: BookId"></td>
                        <td data-bind="text: CustomerName"></td>
                        <td data-bind="text: Room"></td>
                        <td>
                            <button class="btn btn-xs btn-primary" data-bind="click: removeItem">
                                Usuń
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table>
            <button class="btn btn-primary" data-bind="click: handleCreateClick">
                Utwórz
            </button>
        </div>
    </div>

    <div id="edit" data-bind="ifnot: model.displayList">
        <div class="card-header bg-primary text-white pb-0"><h4>Zarezerwuj</h4></div>
        <div class="card-body">
            <div class="form-group">
                <label>Wynajmujący</label>
                <input class="form-control" data-bind="value: model.edit.customername" />
            </div>
            <div class="form-group">
                <label>Pokój</label>
                <input class="form-control" data-bind="value: model.edit.room" />
            </div>
            <button class="btn btn-primary" data-bind="click: handleEditClick">
                Zapisz
            </button>
        </div>
    </div>

    @*<div id="list" class="section card">
            @Html.Partial("List", Model)
        </div>
        <div id="edit" class="section card">
            @Html.Partial("Edit", new Book())
        </div>*@
}